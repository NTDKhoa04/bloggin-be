services:
  app:
    image: node:23-alpine
    ports:
      - '8080:8080'
    working_dir: /app
    volumes:
      - .:/app
    command: sh -c "npm run build && npm run start:prod"
    depends_on:
      - db
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      OPENAI_API_KEY: ${OPENAI_API_KEY}

  db:
    image: postgres:17.2
    ports:
      - "8080:8080"
    restart: always
    networks:
      - web


  nginx-letsencrypt:
    image: nginxproxy/acme-companion
    container_name: nginx-letsencrypt
    depends_on:
      - nginx-proxy
    volumes_from:
      - nginx-proxy
    environment:
      DEFAULT_EMAIL: 22520629@gm.uit.edu.vn
      NGINX_PROXY_CONTAINER: nginx-proxy
      ACME_CA_URI: https://acme-staging-v02.api.letsencrypt.org/directory
    volumes:
      - nginx-certs:/etc/nginx/certs
      - nginx-vhost:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always
    networks:
      - web

#   nginx-letsencrypt:
#     image: nginxproxy/acme-companion
#     container_name: nginx-letsencrypt
#     depends_on:
#       - nginx-proxy
#     volumes_from:
#       - nginx-proxy
#     environment:
#       DEFAULT_EMAIL: 22520629@gm.uit.edu.vn
#       NGINX_PROXY_CONTAINER: nginx-proxy
#     volumes:
#       - nginx-certs:/etc/nginx/certs
#       - nginx-vhost:/etc/nginx/vhost.d
#       - nginx-html:/usr/share/nginx/html
#       - /var/run/docker.sock:/var/run/docker.sock:ro
#     restart: always
#     networks:
#       - web

# volumes:
#   nginx-certs:
#   nginx-vhost:
#   nginx-html:

networks:
  web:
